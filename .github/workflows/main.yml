name: Pull Request Verification

on:
  pull_request:
    types: [opened, synchronize, closed]
    paths:
      - 'app/**'
      - 'bootstrap/**'
      - 'config/**'
      - 'database/**'
      - 'public/**'
      - 'resources/**'
      - 'routes/**'
      - 'storage/**'
      - 'tests/**'
      - 'composer.json'
  pull_request_review:
    types: [submitted]

jobs:
  code-quality:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    name: "Code Quality"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress

      - name: Pull latest changes from remote
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin "${{ github.event.pull_request.head.ref }}"

      - name: Format and Analyze Code
        run: |
          composer format || true
          composer analyze || true

      - name: Commit changes (if any)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: auto format and analyze code"
          skip_fetch: true

  testing:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: "Testing"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          coverage: xdebug

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress

      - name: Prepare Laravel Application
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Set SQLite Database for Testing
        run: |
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=/tmp/database.sqlite" >> .env
          touch /tmp/database.sqlite

      - name: Run Tests with Coverage
        run: composer test-coverage
